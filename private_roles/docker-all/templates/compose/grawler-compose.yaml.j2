version: '2'
services:
{% for count in range(grawler_containers_per_box) %}
  grawler_{{ loop.index }}:
    image: istresearch/grawler:{{ grawler_tag }}
    environment:
      - GRAWLER_ID={% for host in groups['docker-grawler-nodes'] %}{%- if host == inventory_hostname -%}{{ loop.index }}{%- endif -%}{% endfor %}

      - PROCESS_ID=0{{ loop.index }}
      - ELASTICSEARCH_HOSTS={{ groups['elasticsearch-nodes'][0] }}:{{ elasticsearch_network_http_port|default(9200) }}
      - KAFKA_HOSTS={% for host in groups['kafka-nodes'] %}{{ host }}:{{ kafka_port|default(9092) }}{% if not loop.last %},{% endif %}{% endfor %}

      - KAFKA_TOPIC=crawler.graph
      - REDIS_HOST={{ groups['redis-master-node'][0] }}
      - REDIS_PORT=6379
      - REDIS_DB={{ grawler_redis_db }}
      - QUEUE=graph_q
      - SHARED_QUEUE={{ grawler_shared_queue }}
      - THROTTLE_BASE_DELAY=2
      - THROTTLE_MAX_EXP=15
      - THROTTLE_FLOOR=30
      - ZOOKEEPER_HOSTS={% for host in groups['zookeeper-nodes'] %}{{ host }}:{{ zookeeper_port|default(2181) }}{% if not loop.last %},{% endif %}{% endfor %}

      - ZOOKEEPER_ASSIGN_PATH=/grawler/instance
      - LOGGER_NAME=grawler
      - LOG_DIR=/var/log/grawler
      - LOG_FILE=grawler.log
      - LOG_STDOUT=False
      - LOG_JSON=True
      - LOG_LEVEL=INFO
      - THROTTLE_HEADER=x-app-usage
      - THROTTLE_ERROR_CODES=4,32
      - THROTTLE_LIMIT_MS=600000      # sleep time when API returns an error
      - THROTTLE_SPLAY_MS=2048        # max random added sleep time
      - THROTTLE_MIN_EXP=8            # 2 ^ n =  min base sleep time, 2^8 =  256ms
      - THROTTLE_MAX_EXP=12           # 2 ^ n =  max base sleep time, 2^12 =  4096ms
    volumes:
      - logs:/var/log/grawler
    extra_hosts:
      - {{ inventory_hostname }}:172.17.0.1
    restart: always
{% endfor %}

  logstash:
    image: logstash:{{ logstash_tag }}
    command: logstash -f /etc/logstash/conf.d/logstash.conf
    volumes:
      - {{ docker_configs_dir }}/{{ logstash_file_final }}:/etc/logstash/conf.d/logstash.conf
      - {{ docker_configs_dir }}/logs-template.{{ deploy_env }}.json:/etc/logstash/templates/logs-template.json
      - logs:/var/log/container-logs
    restart: "on-failure:3"

volumes:
  logs:
