---
- name: Configuring group
  group:
    name: "{{ hbase_group }}"
  tags:
    - hbase

- name: Configuring user
  user:
    name: "{{ hbase_user }}"
    group: "{{ hbase_group }}"
    createhome: no
    shell: /bin/bash
  tags:
    - hbase

- name: Add hbase user to Hadoop group
  user:
    append: yes
    name: "{{ hbase_user }}"
    groups: "{{ hdfs_group | default('hadoop') }}"
    state: present
  tags:
    - hbase

- name: create hbase install directory
  file:
    path: "{{ item }}"
    state: directory
    mode: 0744
    owner: "{{ hbase_user }}"
    group: "{{ hbase_group }}"
  with_items:
    - "{{ hbase_install_dir }}"
  tags: hbase

- name: check for existing install
  stat: path="{{ hbase_install_dir }}/hbase-{{ hbase_version }}"
  register: hbase
  tags: hbase

- name: download hbase
  get_url:
    url: "{{ repository_infrastructure }}/hbase-{{ hbase_version }}-bin.tar.gz"
    dest: /tmp/hbase-{{ hbase_version }}.tgz
    mode: 0644
    validate_certs: no
  when: hbase.stat.isdir is not defined
  tags: hbase

- name: extract hbase
  unarchive:
    src: /tmp/hbase-{{ hbase_version }}.tgz
    dest: "{{ hbase_install_dir }}"
    copy: no
    owner: "{{ hbase_user }}"
    group: "{{ hbase_group }}"
  when: hbase.stat.isdir is not defined
  tags: hbase

- name: delete temporary hbase file
  file:
    path: /tmp/hbase-{{ hbase_version }}.tgz
    state: absent
  ignore_errors: yes
  tags: hbase

- name: create hbase symlink
  file:
    path: "{{ hbase_install_dir }}/default"
    state: link
    src: "{{ hbase_install_dir }}/hbase-{{ hbase_version }}"
  tags: hbase

- name: configure *-site.xml files
  template:
    src={{ item }}
    dest="{{ hbase_install_dir }}/default/conf/{{ item | regex_replace('.j2', '') }}"
    mode=0644
  with_items:
    - hbase-site.xml.j2
    - hbase-env.sh.j2
  register: hbase_config
  tags: hbase
  
- name: restart hbase to apply configuration changes
  set_fact: hbase_config_changed={{ hbase_config.changed or (hbase_config_changed is defined and hbase_config_changed) }}
  notify:
    - restart hbase master
    - wait for hbase master port
    - restart hbase region server
    - wait for hbase region server port
    - restart hbase rest
    - wait for hbase rest port
  changed_when: hbase_config_changed
  tags: hbase
    
- name: set ulimit hbase configuration
  template:
    src=hbase.conf.j2
    dest=/etc/security/limits.d/hbase.conf
    mode=0755
  tags: hbase

- name: Configuring open file limits
  lineinfile:
    dest: /etc/pam.d/common-session
    regexp: '^session    required   pam_limits.so'
    insertafter: EOF
    line: 'session    required   pam_limits.so'
  tags:
    - hbase

- name: create data directories
  file:
    path={{ item }}
    state=directory
    mode=0755
    owner=hbase
    group=hbase
  with_items:
    - "{{ hbase_tmp_dir }}"
  tags:
    - hbase

- name: LD_LIBRARY_PATH environment configuration
  lineinfile:
    dest: /etc/environment
    line: "export LD_LIBRARY_PATH={{ hdfs_install_dir|default('/opt/hadoop') }}/default/lib"
  tags: hadoop

- include: hbase-master.yml
  when: hbase_master_enabled
  tags:
    - hbase
    - hbase_master

- include: hbase-regionserver.yml
  when: hbase_regionserver_enabled
  tags:
    - hbase
    - hbase_regionserver

- include: hbase-rest.yml
  when: hbase_rest_enabled
  tags:
    - hbase
    - hbase_rest

