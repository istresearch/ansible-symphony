# **********************************
# Managed by Ansible
# **********************************

# Tarsnap cache directory
cachedir {{ tarsnap_conf_cache_dir }}

# Tarsnap key file
keyfile {{ tarsnap_conf_keyfile_path }}

# Don't archive files which have the nodump flag set
{% if not tarsnap_conf_no_dump %}#{% endif %}nodump

# Print statistics when creating or deleting archives
# OPTIONS:
#   print-stats
#   humanize-numbers
#   quiet
{{ tarsnap_conf_stat_print_style }}

# Create a checkpoint once per GB of uploaded data.
checkpoint-bytes {{ tarsnap_conf_checkpoint_bytes }}

### Other options, not applicable to most systems

# Aggressive network behaviour: Use multiple TCP connections when
# writing archives.  Use of this option is recommended only in
# cases where TCP congestion control is known to be the limiting
# factor in upload performance.

{% if not tarsnap_conf_aggressive_networking %}#{% endif %}aggressive-networking

# Exclude files and directories matching specified patterns
{% for excluded_dir in tarsnap_conf_exclude_dirs %}
exclude {{ excluded_dir }}
{% endfor %}

# Include only files and directories matching specified patterns
{% for included_dir in tarsnap_conf_include_dirs %}
include {{ included_dir }}
{% endfor %}

# (Optional) Attempt to reduce tarsnap memory consumption.
# OPTIONS:
#   (blank)
#   lowmem
#   verylowmem
#
# lowmem
# will slow down the process of creating archives, but may help
# on systems where the average size of files being backed up is
# less than 1 MB.
#
#verylowmem
# Try even harder to reduce tarsnap memory consumption.  This can
# significantly slow down tarsnap, but reduces its memory usage
# by an additional factor of 2 beyond what the lowmem option does.
{{ tarsnap_conf_mem_level|default("") }}

# Snapshot time.  Use this option if you are backing up files
# from a filesystem snapshot rather than from a "live" filesystem.
{% if tarsnap_conf_snaptime_file %}
snaptime {{ tarsnap_conf_snaptime_file }}
{% else %}
# snaptime <file>
{% endif %}
