---
- name: check for existing install
  stat: path="{{ python_install_dir }}"
  register: python_installed
  tags: 
    - python

- block:
    - name: update apt-get cache
      apt: update-cache=yes
      tags: 
        - python

    - name: install packages needed to compile python
      apt:
        name={{ item }}
        state=latest
      with_items:
        - autotools-dev
        - blt-dev
        - bzip2
        - dpkg-dev
        - g++-multilib
        - gcc-multilib
        - libbluetooth-dev
        - libbz2-dev
        - libexpat1-dev
        - libffi-dev
        - libffi6
        - libffi6-dbg
        - libgdbm-dev
        - libgpm2
        - libncursesw5-dev
        - libreadline-dev
        - libsqlite3-dev
        - libssl-dev
        - libtinfo-dev
        - mime-support
        - net-tools
        - netbase
        - python-crypto
        - python-mox3
        - python-pil
        - python-ply
        - quilt
        - tk-dev
        - zlib1g-dev
      tags: 
        - python
        
  - name: Download python source
    get_url:
      url="{{ python_source }}"
      dest="/tmp/Python-{{ python_version }}.tgz"

  - name: Extract python source
    unarchive:
      src="/tmp/Python-{{ python_version }}.tgz"
      dest="/tmp"
      copy=no
    
  - name: Build python from source
    shell: "{{ item }}"
    args:
      chdir: "/tmp/Python-{{ python_version }}"
    with_items:
      - "./configure --prefix {{ python_install_dir }}"
      - "make"
      - "make altinstall"

  - name: Delete temporary files
    file:
      path="{{ item }}"
      state=absent
    ignore_errors: yes
    with_items:
      - "/tmp/Python-{{ python_version }}"
      - "/tmp/Python-{{ python_version }}.tgz"

  - name: Set fact python_installed
    set_fact:
      python_installed: true
      
  when: not python_installed.stat.exists
  tags:
    - python