---
- name: set config name (1/4)
  set_fact: conf_name="data"
  when: elasticsearch_is_data
  tags: elasticsearch

- name: set config name (2/4)
  set_fact: conf_name="master"
  when: elasticsearch_is_master
  tags: elasticsearch

- name: set config name (3/4)
  set_fact: conf_name="client"
  when: elasticsearch_is_client
  tags: elasticsearch

- name: set config name (4/4)
  set_fact: conf_name="master_data"
  when: (elasticsearch_is_data=="true" and elasticsearch_is_master=="true")
  tags: elasticsearch

- name: Format AWS volume if it isn't formatted
  filesystem:
    fstype: ext4
    dev: "(( elasticsearch_volume }}"
  when: (elasticsearch_in_aws=="true")
  tags:
    - elasticsearch
    - aws

- name: Mounting attached ec2 volume if deploying in amazon
  mount:
    name: /data
    src: "{{ elasticsearch_volume }}"
    fstype: ext4
    opts: rw
    state: mounted
  when: (elasticsearch_in_aws=="true")
  tags:
    - elasticsearch
    - aws

- name: Configuring group
  group:
    name: "{{ elasticsearch_group }}"
  tags:
    - elasticsearch

- name: Configuring user
  user:
    name: "{{ elasticsearch_user }}"
    group: "{{ elasticsearch_group }}"
    createhome: no
  tags:
    - elasticsearch

- name: create elasticsearch install directory
  file:
    path: "{{ elasticsearch_install_dir }}/"
    state: directory
    mode: 0744
    owner: "{{ elasticsearch_user }}"
    group: "{{ elasticsearch_group }}"
  tags: elasticsearch

- name: create elasticsearch log directory
  file:
    path: "{{ elasticsearch_log_dir }}_{{ conf_name }}/"
    state: directory
    mode: 0755
    owner: "{{ elasticsearch_user }}"
    group: "{{ elasticsearch_group }}"
  tags: elasticsearch

- name: create elasticsearch data directory
  file:
    path: "{{ elasticsearch_data_dir }}_{{ conf_name }}/"
    state: directory
    mode: 0744
    owner: "{{ elasticsearch_user }}"
    group: "{{ elasticsearch_group }}"
  tags: elasticsearch

- name: check for existing elasticsearch install
  stat:
    path: "{{ elasticsearch_install_dir }}/elasticsearch-{{ elasticsearch_version }}"
  register: elasticsearch
  tags: elasticsearch

- name: download elasticsearch
  get_url:
    url: "{{ repository_infrastructure }}/elasticsearch-{{ elasticsearch_version }}.tar.gz"
    dest: "/tmp/elasticsearch-{{ elasticsearch_version }}.tar.gz"
    mode: 0644
    owner: "{{ elasticsearch_user }}"
    group: "{{ elasticsearch_group }}"
    validate_certs: no
  when: elasticsearch.stat.isdir is not defined
  tags: elasticsearch

- name: extract elasticsearch
  unarchive:
    src: "/tmp/elasticsearch-{{ elasticsearch_version }}.tar.gz"
    dest: "{{ elasticsearch_install_dir }}/"
    copy: no
    owner: "{{ elasticsearch_user }}"
    group: "{{ elasticsearch_group }}"
  when: elasticsearch.stat.isdir is not defined
  tags: elasticsearch

- name: delete temporary elasticsearch file
  file:
    path: "/tmp/elasticsearch-{{ elasticsearch_version }}.tar.gz"
    state: absent
  ignore_errors: yes
  tags: elasticsearch

- name: Change elasticsearch file permissions
  file:
    path: "{{ elasticsearch_install_dir }}/"
    recurse: yes
    owner: "{{ elasticsearch_user }}"
    group: "{{ elasticsearch_group }}"
  tags: elasticsearch

- name: create elasticsearch symlink
  file:
    path: "{{ elasticsearch_install_dir }}/default"
    state: link
    src: "{{ elasticsearch_install_dir }}/elasticsearch-{{ elasticsearch_version }}"
    owner: "{{ elasticsearch_user }}"
    group: "{{ elasticsearch_group }}"
  tags: elasticsearch

- name: set elasticsearch limits configuration
  template:
    src: elasticsearch-limits.conf.j2
    dest: /etc/security/limits.d/elasticsearch-limits.conf
    mode: 0755
  tags: elasticsearch

- name: Configuring open file limits
  lineinfile:
    dest: /etc/pam.d/common-session
    regexp: '^session    required   pam_limits.so'
    insertafter: EOF
    line: 'session    required   pam_limits.so'
  tags:
    - elasticsearch

- name: stat config
  stat:
    path: "{{ elasticsearch_conf_dir }}_{{ conf_name }}"
  register: elasticsearchconf
  tags: elasticsearch

- name: Clone default config
  shell: "cp -R {{ elasticsearch_conf_dir }} {{ elasticsearch_conf_dir }}_{{ conf_name }}"
  become: yes
  become_user: "{{ elasticsearch_user }}"
  when: elasticsearchconf.stat.isdir is not defined
  tags: elasticsearch

- name: Copy config files
  template:
    src: "{{ item }}.j2"
    dest: "{{ elasticsearch_conf_dir }}_{{ conf_name }}/{{ item }}"
    owner: "{{ elasticsearch_user }}"
    group: "{{ elasticsearch_group }}"
    mode: 0644
  with_items:
    - logging.yml
    - elasticsearch.yml
  notify:
    - "restart elasticsearch {{ conf_name }}"
  tags:
    - elasticsearch

- name: copy supervisord config
  template:
    src: elasticsearch-supervisord.conf.j2
    dest: "{{ supervisord_programs_dir }}/elasticsearch-{{ conf_name }}-supervisord.conf"
    mode: 0644
  notify:
    - reread supervisord
  tags:
    - elasticsearch

- name: check for existing kopf plugin install
  stat:
    path: "{{ elasticsearch_plugin_dir }}/kopf"
  register: elasticsearchkopf
  when: elasticsearch_install_kopf
  tags: elasticsearch

- name: install kopf plugin
  shell: "{{ elasticsearch_bin_dir }}/plugin install lmenezes/elasticsearch-kopf"
  when: elasticsearch_install_kopf and elasticsearchkopf.stat.isdir is not defined
  tags:
    - elasticsearch
    - kopf

- name: check for existing analysis icu plugin install
  stat:
    path: "{{ elasticsearch_plugin_dir }}/analysis-icu"
  register: elasticsearchicu
  when: elasticsearch_install_icu_analysis
  tags: elasticsearch

- name: install analysis icu plugin
  shell: "{{ elasticsearch_bin_dir }}/plugin install analysis-icu"
  when: elasticsearch_install_icu_analysis and elasticsearchicu.stat.isdir is not defined
  notify: "restart elasticsearch {{ conf_name }}"
  tags:
    - elasticsearch
