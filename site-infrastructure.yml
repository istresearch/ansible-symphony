---
# --------------------------- Slack Integration -----------------------------
- name: Slack
  connection: local
  hosts: all
  become: no
  tasks:
    - block:
      - name: get the command
        shell: ps -o user -o command | grep ansible-playboo[k]
        register: the_command

      - name: get the current branch
        shell: git symbolic-ref --short HEAD
        register: git_branch

      - name: Push to Slack
        slack:
          channel: "#monitoring-ansible"
          username: "Ansible"
          token: "{{ vault_slackbot_ansible }}"
          msg: "```(On branch {{ git_branch.stdout }}) {{ the_command['stdout_lines'][0] }}```"

      run_once: true
      when: (slack_report is not defined or slack_report | bool == true) and not ansible_check_mode
  tags:
    - always

# ------------------------------ Common roles -------------------------------

- name: Run common role
  hosts: all
  roles:
    - common
  tags:
    - site-common

# ------------------------------ Customize Internap ------------------------

- name: Run Internap customize
  hosts: internap
  roles:
    - internap-customize
  tags: internap-customize
  strategy: free

- name: Run supervisord role
  hosts: all
  roles:
    - supervisord
  tags: site-supervisord

# ------------------------------ Customize AWS ------------------------

- name: Run AWS customize
  hosts: all
  roles:
    - aws-customize
  tags: aws-customize
  strategy: free

# ----------------------------- Add TechOps Users -----------------------------------
- name: Add TechOps Users
  hosts:
    - all
  roles:
    - add-users
  tags:
    - site-add-users
    - site-add-techops-users

# ----------------------------- Add Development Users -----------------------------------

- name: Add Developer Users
  hosts:
    - all
  roles:
    - add-users
  tags:
    - site-add-users
    - site-add-dev-users

# ----------------------------- Third-Party users -----------------------------------

# - name: Run Third-Party Users
#   hosts:
#   roles:
#     - add-users
#   tags:
#     - site-add-users
#     - site-add-thirdparty-users

# ----------------------------- Virtualenv -----------------------------------

- name: Run virtualenv role
  hosts: all
  roles:
    - virtualenv
  tags:
    - virtual-env
    - deps-scrapy-cluster

# ----------------------------- Miniconda -----------------------------------

- name: Run miniconda role
  hosts: all
  roles:
    - miniconda
  tags:
    - miniconda
    - deps-traptor
    - deps-grawler

- name: Run logrotate role
  hosts: all
  roles:
    - logrotate
  tags:
    - site-logrotate

- name: Run exim role
  hosts: all
  roles:
    - exim
  tags:
    - site-exim

# -------------------------- Zookeeper and Kafka -----------------------------
- name: Run zookeeper role
  hosts: zookeeper-nodes
  vars:
   - zookeeper_host_list: "{{ groups['zookeeper-nodes'] }}"
  roles: [ zookeeper ]
  tags:
    - site-zookeeper
    - deps-kafka
    - deps-storm
    - deps-hadoop
    - deps-hbase
    - deps-spark
    - deps-scrapy-cluster
    - deps-traptor
    - deps-grawler

- name: Run kafka role
  hosts: kafka-nodes
  vars:
   - kafka_host_list: "{{ groups['kafka-nodes'] }}"
   - zookeeper_host_list: "{{ groups['zookeeper-nodes'] }}"
  roles: [ kafka ]
  tags:
    - site-kafka
    - deps-kafka
    - deps-scrapy-cluster
    - deps-traptor
    - deps-grawler

# ------------------------------ ELK stack ------------------------------------
- name: Run elasticsearch master role
  hosts: elasticsearch-master-nodes
  vars:
   - elasticsearch_host_list: "{{ groups['elasticsearch-nodes'] }}"
   - elasticsearch_is_master: "true"
  roles: [ elasticsearch ]
  tags:
    - site-elasticsearch
    - ELK
    - deps-pulse

- name: Run elasticsearch data role
  hosts: elasticsearch-data-nodes
  vars:
   - elasticsearch_host_list: "{{ groups['elasticsearch-nodes'] }}"
   - elasticsearch_is_data: "true"
  roles: [ elasticsearch ]
  tags:
    - site-elasticsearch
    - ELK
    - deps-pulse

- name: Run elasticsearch client role
  hosts: elasticsearch-client-nodes
  vars:
   - elasticsearch_host_list: "{{ groups['elasticsearch-nodes'] }}"
   - elasticsearch_is_client: "true"
  roles: [ elasticsearch ]
  tags:
    - site-elasticsearch
    - ELK
    - deps-pulse

# ------------------------------ Logstash ------------------------------------
- name: Run logstash role
  hosts: logstash-nodes
  roles: [ logstash ]
  tags:
    - site-logstash
    - ELK
    - deps-grawler

- name: Run Kibana4 role
  hosts: kibana-node
  roles: [ kibana4 ]
  tags:
    - site-kibana
    - ELK
    - deps-pulse

# --------------------------- Scraper services -------------------------------
- name: Run redis role
  hosts: redis-nodes
  roles: [ redis ]
  tags:
    - site-redis
    - deps-scrapy-cluster
    - scrapy-services
    - deps-traptor
    - deps-grawler

- name: Run tor role
  hosts: tor-proxy
  roles: [ tor ]
  tags:
    - site-tor
    - scrapy-services

# --------------------------- Scrapy Cluster ---------------------------------
- name: Run Scrapy Cluster Crawler
  hosts: scrapy-cluster-crawler-nodes
  vars:
    - sc_is_crawler: True
  roles: [ scrapy-cluster ]
  tags:
    - site-scrapy-cluster-crawler
    - site-scrapy-cluster
    - deps-scrapy-cluster

- name: Run Scrapy Cluster Kafka Monitor
  hosts: scrapy-cluster-kafka-monitor-node
  vars:
    - sc_is_kafka_monitor: True
  roles: [ scrapy-cluster ]
  tags:
    - site-scrapy-cluster-kafka-monitor
    - site-scrapy-cluster
    - deps-scrapy-cluster

- name: Run Scrapy Cluster Redis Monitor
  hosts: scrapy-cluster-redis-monitor-node
  vars:
    - sc_is_redis_monitor: True
  roles: [ scrapy-cluster ]
  tags:
    - site-scrapy-cluster-redis-monitor
    - site-scrapy-cluster
    - deps-scrapy-cluster

- name: Run Scrapy Cluster Indexer
  hosts: scrapy-cluster-indexer-nodes
  vars:
    - sc_is_indexer: True
  roles: [ scrapy-cluster ]
  tags:
    - site-scrapy-cluster-indexer
    - site-scrapy-cluster
    - deps-scrapy-cluster

# -------------------------------- Storm -------------------------------------

- name: Run Storm Nimbus role
  hosts: storm-nimbus-node
  vars:
    - storm_nimbus_enabled: true
    - nimbus_host: "{{ groups['storm-nimbus-node'][0] }}"
    - zookeeper_host_list: "{{ groups['zookeeper-nodes'] }}"
  roles: [ storm ]
  tags:
    - site-storm
    - deps-storm

- name: Run Storm UI role
  hosts: storm-ui-node
  vars:
    - storm_ui_enabled: true
    - nimbus_host: "{{ groups['storm-nimbus-node'][0] }}"
    - zookeeper_host_list: "{{ groups['zookeeper-nodes'] }}"
  roles: [ storm ]
  tags:
    - site-storm
    - deps-storm

- name: Run Storm supervisor role
  hosts: storm-supervisor-nodes
  vars:
    - storm_supervisor_enabled: true
    - storm_logviewer_enabled: true
    - nimbus_host: "{{ groups['storm-nimbus-node'][0] }}"
    - zookeeper_host_list: "{{ groups['zookeeper-nodes'] }}"
  roles: [ storm ]
  tags:
    - site-storm
    - deps-storm

- name: Storm Configuration Changed Fact Reset
  hosts: storm-nodes
  tasks:
    - set_fact: storm_config_changed=false
  tags:
    - site-storm
    - deps-storm

# --------------------------------- Hadoop -----------------------------------
- name: HDFS Namenode
  hosts: hadoop-namenode-node
  vars:
    - hdfs_namenode_enabled: true
    - yarn_resourcemanager_enabled: true
    - yarn_historyserver_enabled: false
    - mapreduce_historyserver_enabled: true
    - dfs_namenode_host: "{{ groups['hadoop-namenode-node'][0] }}"
    - yarn_resourcemanager_hostname: "{{ groups['hadoop-namenode-node'][0] }}"
    - yarn_historyserver_hostname: "{{ groups['hadoop-namenode-node'][0] }}"
  roles: [ hadoop ]
  tags:
    - site-hadoop
    - deps-hadoop
    - deps-hbase
    - deps-spark

- name: HDFS Datanodes
  hosts: hadoop-datanode-nodes
  vars:
    - hdfs_datanode_enabled: true
    - yarn_nodemanager_enabled: true
    - dfs_namenode_host: "{{ groups['hadoop-namenode-node'][0] }}"
    - yarn_resourcemanager_hostname: "{{ groups['hadoop-namenode-node'][0] }}"
    - yarn_historyserver_hostname: "{{ groups['hadoop-namenode-node'][0] }}"
  roles: [ hadoop ]
  tags:
    - site-hadoop
    - deps-hadoop
    - deps-hbase
    - deps-spark

- name: HDFS Secondary Namenode
  hosts: hadoop-secondary-namenode-node
  vars:
    - hdfs_secondary_namenode_enabled: true
    - dfs_namenode_host: "{{ groups['hadoop-namenode-node'][0] }}"
    - yarn_resourcemanager_hostname: "{{ groups['hadoop-namenode-node'][0] }}"
    - yarn_historyserver_hostname: "{{ groups['hadoop-namenode-node'][0] }}"
  roles: [ hadoop ]
  tags:
    - site-hadoop
    - deps-hadoop
    - deps-hbase
    - deps-spark

- name: Hadoop Configuration Changed Fact Reset
  hosts: hadoop-nodes
  tasks:
    - set_fact: hadoop_config_changed=false
  tags:
    - site-hadoop
    - deps-hadoop
    - deps-hbase
    - deps-spark

# --------------------------------- Oozie ------------------------------------
- name: Oozie Install
  hosts: oozie-node
  roles: [ oozie ]
  tags:
    - site-oozie

# --------------------------------- HBase ------------------------------------
- name: HBase Master Node
  hosts: hbase-master-node
  vars:
    - hbase_master_enabled: true
    - hbase_rest_enabled: true
    - hbase_master_host: "{{ groups['hbase-master-node'][0] }}"
    - dfs_namenode_host: "{{ groups['hadoop-namenode-node'][0] }}"
    - zookeeper_host_list: "{{ groups['zookeeper-nodes'] }}"
  roles: [ hbase ]
  tags:
    - site-hbase
    - deps-hbase

- name: HBase Region Servers
  hosts: hbase-regionserver-nodes
  vars:
    - hbase_regionserver_enabled: true
    - hbase_thriftserver_enabled: true
    - hbase_master_host: "{{ groups['hbase-master-node'][0] }}"
    - dfs_namenode_host: "{{ groups['hadoop-namenode-node'][0] }}"
    - zookeeper_host_list: "{{ groups['zookeeper-nodes'] }}"
  roles: [ hbase ]
  tags:
    - site-hbase
    - deps-hbase

- name: HBase Configuration Changed Fact Reset
  hosts: hbase-nodes
  tasks:
    - set_fact: hbase_config_changed=false
  tags:
    - site-hbase
    - deps-hbase

# --------------------------------- Hue ------------------------------------
- name: Hue Nodes
  hosts: hue-nodes
  roles: [ hue ]
  tags:
    - site-hue

# --------------------------------- Spark ------------------------------------
# Requires Hadoop and HDFS

- name: Spark Master Nodes
  hosts: spark-master-node
  vars:
    - spark_master_enabled: true
    - spark_worker_enabled: false
    - dfs_namenode_host: "{{ groups['hadoop-namenode-node'][0] }}"
    - yarn_historyserver_hostname: "{{ groups['hadoop-namenode-node'][0] }}"
  roles:
    - spark
  tags:
    - site-spark
    - deps-spark

- name: Spark Workers
  hosts: spark-worker-nodes
  vars:
    - spark_master_enabled: false
    - spark_worker_enabled: true
    - dfs_namenode_host: "{{ groups['hadoop-namenode-node'][0] }}"
    - yarn_historyserver_hostname: "{{ groups['hadoop-namenode-node'][0] }}"
  roles:
    - spark
  tags:
    - site-spark
    - deps-spark

- name: Spark Configuration Changed Fact Reset
  hosts: spark-nodes
  tasks:
    - set_fact: spark_config_changed=false
  tags:
    - site-spark
    - deps-spark

# ---------------------------------- Docker Engine ---------------------------

- name: Docker Engine
  hosts: docker-engine
  roles: [ docker-engine ]
  tags:
    - site-docker-engine
    - deps-pulse-docker

# ---------------------------------- MySQL -----------------------------------

- name: MySQL
  hosts: mysql-node
  roles: [ mysql ]
  tags:
    - mysql
    - deps-pulse
    - deps-pulse-docker

# --------------------------------- Apache -----------------------------------
- name: Apache
  hosts: apache-node
  roles: [ apache2 ]
  tags:
    - apache
    - deps-pulse
    - deps-pulse-docker

# ---------------------------------- Pulse -----------------------------------

- name: Pulse UI Node Infrastructure
  hosts: pulse-ui-node
  roles: [ pulse-ui ]
  tags:
    - site-pulse
    - deps-pulse
    - site-pulse-docker
    - deps-pulse-docker

- name: Pulse Docker Infrastructure
  hosts: docker-engine
  vars_files:
    - roles/elasticsearch/defaults/main.yml
    - roles/kibana4/defaults/main.yml
  roles: [ pulse-docker ]
  tags:
    - site-pulse-docker
    - deps-pulse-docker

# ---------------------------------- Neo4j --------------------------------

- name: Neo4j
  hosts: neo4j-node
  roles: [ neo4j ]
  tags:
    - site-neo4j

# ---------------------------------- Tangelo --------------------------------

- name: Tangelo
  hosts: tangelo-node
  roles: [ tangelo ]
  tags:
    - site-tangelo

# ---------------------------------- DataDog --------------------------------

- hosts: all
  roles: [ dd-agent ]
  tags:
    - site-dd-agent

# ---------------------------------- Traptor --------------------------------
# TODO also test traptor-track-nodes and traptor-location-nodes

- name: Run Traptor role
  hosts: traptor-nodes
  roles: [ traptor ]
  tags:
    - site-traptor
    - deps-traptor

# ---------------------------------- Tarsnap --------------------------------

- name: Tarsnap
  hosts: tarsnap-nodes
  roles: [ tarsnap ]
  tags:
    - site-tarsnap

# ---------------------------------- PhantomJS --------------------------------

- name: PhantomJS
  hosts: phantomjs-nodes
  roles: [ phantomjs ]
  tags:
    - site-phantomjs

# ---------------------------------- Grawler --------------------------------

- name: Run Grawler role
  hosts: grawler-nodes
  roles: [ grawler ]
  tags:
    - site-grawler
    - deps-grawler

#---------------------------------- Docker Bumblebee --------------------------------

- name: Run Docker Bumblebee role
  hosts: docker-bumblebee-nodes
  roles: [ docker-bumblebee ]
  tags:
    - site-docker-bumblebee

# ---------------------------------- Docker Cooper --------------------------------

- name: Run Docker Cooper role
  hosts: docker-cooper-nodes
  roles: [ docker-cooper ]
  tags:
    - site-docker-cooper

# ---------------------------------- Docker Curator --------------------------------

- name: Run Docker Curator role
  hosts: docker-curator-nodes
  roles: [ docker-curator ]
  tags:
    - site-docker-curator

# ---------------------------------- Docker Grawler --------------------------------

- name: Run Docker Grawler role
  hosts: docker-grawler-nodes
  roles: [ docker-grawler ]
  tags:
    - site-docker-grawler

# ---------------------------------- Docker Rule Manager --------------------------------

- name: Run Docker Rule Manager role
  hosts: docker-rule-manager-nodes
  roles: [ docker-rule-manager ]
  tags:
    - site-docker-rule-manager

# ---------------------------------- Docker Scrapy --------------------------------

- name: Run Docker Scrapy role
  hosts: docker-scrapy-nodes
  roles: [ docker-scrapy ]
  tags:
    - site-docker-scrapy

# ---------------------------------- Docker Telegraptor --------------------------------

- name: Run Docker Telegraptor role
  hosts: docker-telegraptor-nodes
  roles: [ docker-telegraptor ]
  tags:
    - site-docker-telegraptor-nodes

# ---------------------------------- Docker Telegraptor API --------------------------------

- name: Run Docker Telegraptor API role
  hosts: docker-telegraptor-api-nodes
  roles: [ docker-telegraptor-api ]
  tags:
    - site-docker-telegraptor-api

# ---------------------------------- Docker YouScrape --------------------------------

- name: Run Docker YouScrape role
  hosts: docker-youscrape-nodes
  roles: [ docker-youscrape ]
  tags:
    - site-docker-youscrape

# ---------------------------------- Docker Gatekeeper --------------------------------

- name: Run Docker Gatekeeper role
  hosts: docker-gatekeeper-nodes
  roles: [ docker-gatekeeper ]
  tags:
    - site-docker-gatekeeper

# ---------------------------------- Docker Traptor --------------------------------

- name: Run Traptor Follow role
  hosts: docker-traptor-follow-nodes
  roles: [ docker-traptor ]
  vars:
    is_follow: true
  tags:
    - site-docker-traptor
    - site-docker-traptor-follow

- name: Run Traptor Track role
  hosts: docker-traptor-track-nodes
  roles: [ docker-traptor ]
  vars:
    is_track: true
  tags:
    - site-docker-traptor
    - site-docker-traptor-track

- name: Run Traptor Geo role
  hosts: docker-traptor-geo-nodes
  roles: [ docker-traptor ]
  vars:
    is_geo: true
  tags:
    - site-docker-traptor
    - site-docker-traptor-geo

# ---------------------------------- Portainer --------------------------------

- name: Run Portainer role
  hosts: portainer-nodes
  roles: [ portainer ]
  tags:
    - site-portainer

# ----------------------------------- Docker Master ---------------------------

# Scrapy --------
- name: Run Docker Scrapy role
  hosts: docker-scrapy-nodes
  roles: [ docker-all ]
  tags:
    - site-docker-scrapy-all
  vars:
    component: scrapy-cluster

# Traptor --------
- name: Run Docker Traptor Follow role
  hosts: docker-traptor-follow-nodes
  roles: [ docker-all ]
  vars:
    component: traptor-follow
    logstash_file_final: "logstash-traptor.{{ deploy_env }}.conf"
    logstash_tag: traptor
    project_name: traptor
  tags:
    - site-docker-traptor-all
    - site-docker-traptor-follow-all

- name: Run Docker Traptor Track role
  hosts: docker-traptor-track-nodes
  roles: [ docker-all ]
  vars:
    component: traptor-track
    logstash_file_final: "logstash-traptor.{{ deploy_env }}.conf"
    logstash_tag: traptor
    project_name: traptor
  tags:
    - site-docker-traptor-all
    - site-docker-traptor-track-all

- name: Run Docker Traptor Geo role
  hosts: docker-traptor-geo-nodes
  roles: [ docker-all ]
  vars:
    component: traptor-geo
    logstash_file_final: "logstash-traptor.{{ deploy_env }}.conf"
    logstash_tag: traptor
    project_name: traptor
  tags:
    - site-docker-traptor-all
    - site-docker-traptor-geo-all

# Cooper --------
- name: Run Docker Cooper role
  hosts: docker-cooper-nodes
  roles: [ docker-all ]
  tags:
    - site-docker-cooper-all
  vars:
    component: cooper
    extra_tasks: true

# Grawler ----------
- name: Run Grawler role
  hosts: docker-grawler-nodes
  roles: [ docker-all ]
  vars:
    component: grawler
    extra_tasks: true
  tags:
    - site-docker-grawler-all

# Telegraptor ----------
- name: Run Telegraptor role
  hosts: docker-telegraptor-nodes
  roles: [ docker-all ]
  vars:
    component: telegraptor
  tags:
    - site-docker-telegraptor-all

# Pulse ----------
- name: Run Pulse role
  hosts: docker-pulse-nodes
  roles: [ docker-all ]
  vars:
    component: pulse
  tags:
    - site-docker-pulse-all
